{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mercury Sample Manager This is Mercury Sample Manager, a sample management tool that enables researchers to keep track of their samples from any PC in a laboratory. The programme is a Flask-based web service that runs on a central server on the local network of your research institute and that can be accessed from all other computers on the same network using the normal web browser (should be a recent browser though). Disclaimer The developers take no responsibility for the loss or theft of data managed by this software. The software sends anonymous usage statistics to the developers, including the software version, the number of users, samples and actions stored in the database, the server uptime and the used/available disk space. Coding style Install the developer requirements for MSM: make install-dependencies In order to auto-correct coding style, use: black app --line-length=100 In order to run this as a pre-commit hook, use: pre-commit install Installation of development server This programme should work an almost any platform (Linux, Windows, MacOS), but I only provide the installation instructions for Linux. Seeing that you should install it on a server, I suppose Linux is the target OS in most cases anyways. You should have python 3.x and python3-venv installed on your system. Using a virtual environment is not absolutely necessary, but I recommend it. You can now create a folder somewhere and clone the git repository: $ git clone git@github.com:HolgerGraef/MSM.git Now you enter this directory and you create a virtual environment for python - and activate it: $ cd MSM $ python3 -m venv venv $ . venv/bin/activate $ pip install --upgrade pip Finally, all that remains to do is to install the required python packages: $ pip install -r requirements.txt Now you have to initialise the database by running: $ python manage.py db upgrade Note that, if you want to initialise the database for deployment (i.e. in the \"production\" configuration), you should first set up the FLASK_CONFIG variable accordingly: $ export FLASK_CONFIG=production && python manage.py db upgrade This will also create the admin user that you will use for your first login (admin@admin.com, password is admin). You can update the details (user name, email and password) of the administrator in the \"Profile\" section (you will find the corresponding button on the top right after logging in). Also remember to set up an email account in the corresponding subsection of the \"Settings\" page. You can set up a site name for usage statistics by writing it into a file \"usage_stats_site\" in the MSM folder. You can start the development server by simply executing the \"run script\": $ ./run Using GitHub deploy keys As long as this is a private repository, access can be granted using deploy keys. You can generate a public/private key pair by executing ssh-keygen -t rsa -C \"[email address]\" and copy the content of the corresponding public key file to the \"Deploy Keys\" section in the repository's settings page on GitHub. Note that if the key is not the default key ( ~/.ssh/id_rsa ), you need to set up a config file for ssh ( ~/.ssh/config ), e.g.: Host msm.github.com HostName github.com User git IdentityFile /home/[user]/.ssh/msm_rsa IdentitiesOnly yes In this case, we defined a new hostname for github.com (msm.github.com) for the key file msm_rsa and the above git clone command has to be modified as follows: git clone git@msm.github.com:HolgerGraef/MSM.git Development with docker Set up some tools: install Docker, see https://docs.docker.com/engine/install/ubuntu/ install pywatchman: sudo apt install watchman pip install -i https://test.pypi.org/simple/ pywatchman==1.4.2.dev1 (c.f. https://github.com/facebook/watchman/issues/970) Build and run: make build-dev make run-dev Running with docker docker compose -f docker/docker-compose.yml build web docker compose -f docker/docker-compose.yml up web Deployment with gunicorn and nginx Carry out the steps described above in order to set up the development server. Then configure gunicorn autostart by setting up a corresponding autostart file. This is explained below either for upstart or for systemd. Please note that the app should be executed in the HTTP root, bugs should be expected when you install MSM in a subfolder. Note the use of the --preload option for gunicorn in the following, which ensures that the thread for reporting usage statistics is only started once (before the worker processes are forked). Also note that you can test the multiprocessing behaviour in your development environment by running e.g.: gunicorn [--preload] --workers 4 --bind 127.0.0.1 manage:app For upstart Create the file /etc/init/msm.conf and copy the following code into it: description \"Gunicorn application server running Mercury Sample Manager\" start on runlevel [2345] stop on runlevel [!2345] respawn setuid [user name] setgid www-data env FLASK_CONFIG=production env PATH=[path]/MSM/venv/bin:/usr/bin chdir [path]/MSM exec gunicorn --preload --workers 4 --bind unix:msm.sock -m 007 manage:app Where you will have to replace [user name] by your user name and [path] by the path where you installed the programme. The second path (/usr/bin) is where you should have installed the git executable. For systemd Create the file /lib/systemd/system/msm.service and copy the following code into it: [Unit] Description=Gunicorn application server running Mercury Sample Manager [Service] Restart=on-failure User=[user name] Group=www-data Environment=FLASK_CONFIG=production Environment=PATH=[path]/MSM/venv/bin:/usr/bin WorkingDirectory=[path]/MSM ExecStart=[path]/MSM/venv/bin/gunicorn --preload --workers 4 --bind unix:msm.sock -m 007 manage:app [Install] WantedBy=multi-user.target Where you will have to replace [user name] by your user name and [path] by the path where you installed the programme. The second path (/usr/bin) is where you should have installed the git executable. Note that for the execution of gunicorn, the group has to be set to www-data so that the msm.sock file is accessible for the nginx server (this also applies to the upstart configuration above). Now activate autostart: sudo systemctl enable msm in both cases, continue here: Now install nginx: $ sudo apt-get install nginx Create an SSL certificate and key in the following folder: $ sudo mkdir /etc/nginx/ssl $ cd /etc/nginx/ssl In order to create SSL certificate and key follow the steps given in https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu-12-04 You then want to configure your nginx server. Create a file \"msm\" in /etc/nginx/sites-available and copy the following content into it: server { listen 80; server_name localhost; rewrite ^ https://$server_name$request_uri? permanent; } # HTTPS server server { listen 443; server_name localhost; ssl on; ssl_certificate /etc/nginx/ssl/server.crt; ssl_certificate_key /etc/nginx/ssl/server.key; location / { include proxy_params; proxy_pass http://unix:[path]/MSM/msm.sock; } } Where - again - you have to replace [path] by the path to the application's directory. Then create a symbolic link to this file in /etc/nginx/sites-enabled and delete the default entry: $ sudo ln -s /etc/nginx/sites-available/msm /etc/nginx/sites-enabled $ sudo rm /etc/nginx/sites-enabled/default If you want your server to support large file uploads, you have to change /etc/nginx/nginx.conf and add the following line to the http context to increase the size limit (in this example 5 Megabytes): # set client body size to 5M # client_max_body_size 5M; You can now start your server by executing: $ sudo start msm $ sudo service nginx restart If you use upstart, for systemd type: $ sudo systemctl start msm $ sudo systemctl restart nginx The server will now automatically - i.e. also after a reboot - be available on localhost. More details: https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-14-04","title":"Home"},{"location":"#mercury-sample-manager","text":"This is Mercury Sample Manager, a sample management tool that enables researchers to keep track of their samples from any PC in a laboratory. The programme is a Flask-based web service that runs on a central server on the local network of your research institute and that can be accessed from all other computers on the same network using the normal web browser (should be a recent browser though).","title":"Mercury Sample Manager"},{"location":"#disclaimer","text":"The developers take no responsibility for the loss or theft of data managed by this software. The software sends anonymous usage statistics to the developers, including the software version, the number of users, samples and actions stored in the database, the server uptime and the used/available disk space.","title":"Disclaimer"},{"location":"#coding-style","text":"Install the developer requirements for MSM: make install-dependencies In order to auto-correct coding style, use: black app --line-length=100 In order to run this as a pre-commit hook, use: pre-commit install","title":"Coding style"},{"location":"#installation-of-development-server","text":"This programme should work an almost any platform (Linux, Windows, MacOS), but I only provide the installation instructions for Linux. Seeing that you should install it on a server, I suppose Linux is the target OS in most cases anyways. You should have python 3.x and python3-venv installed on your system. Using a virtual environment is not absolutely necessary, but I recommend it. You can now create a folder somewhere and clone the git repository: $ git clone git@github.com:HolgerGraef/MSM.git Now you enter this directory and you create a virtual environment for python - and activate it: $ cd MSM $ python3 -m venv venv $ . venv/bin/activate $ pip install --upgrade pip Finally, all that remains to do is to install the required python packages: $ pip install -r requirements.txt Now you have to initialise the database by running: $ python manage.py db upgrade Note that, if you want to initialise the database for deployment (i.e. in the \"production\" configuration), you should first set up the FLASK_CONFIG variable accordingly: $ export FLASK_CONFIG=production && python manage.py db upgrade This will also create the admin user that you will use for your first login (admin@admin.com, password is admin). You can update the details (user name, email and password) of the administrator in the \"Profile\" section (you will find the corresponding button on the top right after logging in). Also remember to set up an email account in the corresponding subsection of the \"Settings\" page. You can set up a site name for usage statistics by writing it into a file \"usage_stats_site\" in the MSM folder. You can start the development server by simply executing the \"run script\": $ ./run","title":"Installation of development server"},{"location":"#using-github-deploy-keys","text":"As long as this is a private repository, access can be granted using deploy keys. You can generate a public/private key pair by executing ssh-keygen -t rsa -C \"[email address]\" and copy the content of the corresponding public key file to the \"Deploy Keys\" section in the repository's settings page on GitHub. Note that if the key is not the default key ( ~/.ssh/id_rsa ), you need to set up a config file for ssh ( ~/.ssh/config ), e.g.: Host msm.github.com HostName github.com User git IdentityFile /home/[user]/.ssh/msm_rsa IdentitiesOnly yes In this case, we defined a new hostname for github.com (msm.github.com) for the key file msm_rsa and the above git clone command has to be modified as follows: git clone git@msm.github.com:HolgerGraef/MSM.git","title":"Using GitHub deploy keys"},{"location":"#development-with-docker","text":"Set up some tools: install Docker, see https://docs.docker.com/engine/install/ubuntu/ install pywatchman: sudo apt install watchman pip install -i https://test.pypi.org/simple/ pywatchman==1.4.2.dev1 (c.f. https://github.com/facebook/watchman/issues/970) Build and run: make build-dev make run-dev","title":"Development with docker"},{"location":"#running-with-docker","text":"docker compose -f docker/docker-compose.yml build web docker compose -f docker/docker-compose.yml up web","title":"Running with docker"},{"location":"#deployment-with-gunicorn-and-nginx","text":"Carry out the steps described above in order to set up the development server. Then configure gunicorn autostart by setting up a corresponding autostart file. This is explained below either for upstart or for systemd. Please note that the app should be executed in the HTTP root, bugs should be expected when you install MSM in a subfolder. Note the use of the --preload option for gunicorn in the following, which ensures that the thread for reporting usage statistics is only started once (before the worker processes are forked). Also note that you can test the multiprocessing behaviour in your development environment by running e.g.: gunicorn [--preload] --workers 4 --bind 127.0.0.1 manage:app","title":"Deployment with gunicorn and nginx"},{"location":"#for-upstart","text":"Create the file /etc/init/msm.conf and copy the following code into it: description \"Gunicorn application server running Mercury Sample Manager\" start on runlevel [2345] stop on runlevel [!2345] respawn setuid [user name] setgid www-data env FLASK_CONFIG=production env PATH=[path]/MSM/venv/bin:/usr/bin chdir [path]/MSM exec gunicorn --preload --workers 4 --bind unix:msm.sock -m 007 manage:app Where you will have to replace [user name] by your user name and [path] by the path where you installed the programme. The second path (/usr/bin) is where you should have installed the git executable.","title":"For upstart"},{"location":"#for-systemd","text":"Create the file /lib/systemd/system/msm.service and copy the following code into it: [Unit] Description=Gunicorn application server running Mercury Sample Manager [Service] Restart=on-failure User=[user name] Group=www-data Environment=FLASK_CONFIG=production Environment=PATH=[path]/MSM/venv/bin:/usr/bin WorkingDirectory=[path]/MSM ExecStart=[path]/MSM/venv/bin/gunicorn --preload --workers 4 --bind unix:msm.sock -m 007 manage:app [Install] WantedBy=multi-user.target Where you will have to replace [user name] by your user name and [path] by the path where you installed the programme. The second path (/usr/bin) is where you should have installed the git executable. Note that for the execution of gunicorn, the group has to be set to www-data so that the msm.sock file is accessible for the nginx server (this also applies to the upstart configuration above). Now activate autostart: sudo systemctl enable msm","title":"For systemd"},{"location":"#in-both-cases-continue-here","text":"Now install nginx: $ sudo apt-get install nginx Create an SSL certificate and key in the following folder: $ sudo mkdir /etc/nginx/ssl $ cd /etc/nginx/ssl In order to create SSL certificate and key follow the steps given in https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu-12-04 You then want to configure your nginx server. Create a file \"msm\" in /etc/nginx/sites-available and copy the following content into it: server { listen 80; server_name localhost; rewrite ^ https://$server_name$request_uri? permanent; } # HTTPS server server { listen 443; server_name localhost; ssl on; ssl_certificate /etc/nginx/ssl/server.crt; ssl_certificate_key /etc/nginx/ssl/server.key; location / { include proxy_params; proxy_pass http://unix:[path]/MSM/msm.sock; } } Where - again - you have to replace [path] by the path to the application's directory. Then create a symbolic link to this file in /etc/nginx/sites-enabled and delete the default entry: $ sudo ln -s /etc/nginx/sites-available/msm /etc/nginx/sites-enabled $ sudo rm /etc/nginx/sites-enabled/default If you want your server to support large file uploads, you have to change /etc/nginx/nginx.conf and add the following line to the http context to increase the size limit (in this example 5 Megabytes): # set client body size to 5M # client_max_body_size 5M; You can now start your server by executing: $ sudo start msm $ sudo service nginx restart If you use upstart, for systemd type: $ sudo systemctl start msm $ sudo systemctl restart nginx The server will now automatically - i.e. also after a reboot - be available on localhost. More details: https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-14-04","title":"in both cases, continue here:"},{"location":"app/","text":"App Mercury Sample Manager Index / App Auto-generated documentation for app module. create_app Show source in init .py:28 Signature def create_app ( config_name ): ... Modules Auth Browser Config Decorators Emailing Main Models Printdata Profile Settings SMBInterface Tests Usagestats Validators","title":"App"},{"location":"app/#app","text":"Mercury Sample Manager Index / App Auto-generated documentation for app module.","title":"App"},{"location":"app/#create_app","text":"Show source in init .py:28","title":"create_app"},{"location":"app/#signature","text":"def create_app ( config_name ): ...","title":"Signature"},{"location":"app/#modules","text":"Auth Browser Config Decorators Emailing Main Models Printdata Profile Settings SMBInterface Tests Usagestats Validators","title":"Modules"},{"location":"app/config/","text":"Config Mercury Sample Manager Index / App / Config Auto-generated documentation for app.config module. Config Show source in config.py:8 Signature class Config : ... Config.init_app Show source in config.py:18 Signature @staticmethod def init_app ( app ): ... DevelopmentConfig Show source in config.py:30 Signature class DevelopmentConfig ( Config ): ... See also Config ProductionConfig Show source in config.py:40 Signature class ProductionConfig ( Config ): ... See also Config TestingConfig Show source in config.py:47 Signature class TestingConfig ( Config ): ... See also Config","title":"Config"},{"location":"app/config/#config","text":"Mercury Sample Manager Index / App / Config Auto-generated documentation for app.config module.","title":"Config"},{"location":"app/config/#config_1","text":"Show source in config.py:8","title":"Config"},{"location":"app/config/#signature","text":"class Config : ...","title":"Signature"},{"location":"app/config/#configinit_app","text":"Show source in config.py:18","title":"Config.init_app"},{"location":"app/config/#signature_1","text":"@staticmethod def init_app ( app ): ...","title":"Signature"},{"location":"app/config/#developmentconfig","text":"Show source in config.py:30","title":"DevelopmentConfig"},{"location":"app/config/#signature_2","text":"class DevelopmentConfig ( Config ): ...","title":"Signature"},{"location":"app/config/#see-also","text":"Config","title":"See also"},{"location":"app/config/#productionconfig","text":"Show source in config.py:40","title":"ProductionConfig"},{"location":"app/config/#signature_3","text":"class ProductionConfig ( Config ): ...","title":"Signature"},{"location":"app/config/#see-also_1","text":"Config","title":"See also"},{"location":"app/config/#testingconfig","text":"Show source in config.py:47","title":"TestingConfig"},{"location":"app/config/#signature_4","text":"class TestingConfig ( Config ): ...","title":"Signature"},{"location":"app/config/#see-also_2","text":"Config","title":"See also"},{"location":"app/decorators/","text":"Decorators Mercury Sample Manager Index / App / Decorators Auto-generated documentation for app.decorators module. admin_required Show source in decorators.py:6 Signature def admin_required ( f ): ...","title":"Decorators"},{"location":"app/decorators/#decorators","text":"Mercury Sample Manager Index / App / Decorators Auto-generated documentation for app.decorators module.","title":"Decorators"},{"location":"app/decorators/#admin_required","text":"Show source in decorators.py:6","title":"admin_required"},{"location":"app/decorators/#signature","text":"def admin_required ( f ): ...","title":"Signature"},{"location":"app/emailing/","text":"Emailing Mercury Sample Manager Index / App / Emailing Auto-generated documentation for app.emailing module. read_mailconfig Show source in emailing.py:24 Signature def read_mailconfig (): ... send_mail Show source in emailing.py:7 Signature def send_mail ( to , subject , ** kwargs ): ...","title":"Emailing"},{"location":"app/emailing/#emailing","text":"Mercury Sample Manager Index / App / Emailing Auto-generated documentation for app.emailing module.","title":"Emailing"},{"location":"app/emailing/#read_mailconfig","text":"Show source in emailing.py:24","title":"read_mailconfig"},{"location":"app/emailing/#signature","text":"def read_mailconfig (): ...","title":"Signature"},{"location":"app/emailing/#send_mail","text":"Show source in emailing.py:7","title":"send_mail"},{"location":"app/emailing/#signature_1","text":"def send_mail ( to , subject , ** kwargs ): ...","title":"Signature"},{"location":"app/models/","text":"Models Mercury Sample Manager Index / App / Models Auto-generated documentation for app.models module. Action Show source in models.py:300 Signature class Action ( db . Model ): ... Action().has_read_access Show source in models.py:318 Signature def has_read_access ( self , user ): ... Action().has_write_access Show source in models.py:327 Signature def has_write_access ( self , user ): ... Activity Show source in models.py:443 Signature class Activity ( db . Model ): ... ActivityType Show source in models.py:461 Signature class ActivityType ( db . Model ): ... LinkUserNews Show source in models.py:394 Signature class LinkUserNews ( db . Model ): ... News Show source in models.py:331 Attributes recipient_id - recipient can be either all users, a specific user, or all users who share a given sample: db.Column(db.Integer, db.ForeignKey('users.id')) recipients - action = db.relationship('Action', backref=\"news\"): db.relationship('LinkUserNews', backref='news', foreign_keys='LinkUserNews.news_id', cascade='delete') Signature class News ( db . Model ): ... News().dispatch Show source in models.py:352 Signature def dispatch ( self ): ... News().render_content Show source in models.py:381 Signature def render_content ( self ): ... SMBResource Show source in models.py:404 Signature class SMBResource ( db . Model ): ... Sample Show source in models.py:186 Attributes iscollaborative - in collaborative samples, all sharing users can edit all actions: db.Column(db.Boolean) children - NB: the cascade delete for shares and actions is no longer used because we delete samples by setting isdeleted to True: db.relationship('Sample', backref=db.backref('parent', remote_side=[id])) Signature class Sample ( db . Model ): ... Sample().is_accessible_for Show source in models.py:237 go through the owner and shares of this sample and check in the hierarchy (i.e. all parents) if it can be accessed by user if indirect_only is True, only look for indirect shares, i.e. parent shares if direct_only is True, only look for direct shares indirect sharing has priority over direct sharing in order to avoid clogging up the hierarchy Signature def is_accessible_for ( self , user , indirect_only = False , direct_only = False ): ... Sample().logical_parent Show source in models.py:282 Signature @property def logical_parent ( self ): ... Sample().mountedsamples Show source in models.py:268 make a list of samples that are mounted in this one by the current user Signature @property def mountedsamples ( self ): ... Share Show source in models.py:419 Signature class Share ( db . Model ): ... Upload Show source in models.py:430 Signature class Upload ( db . Model ): ... User Show source in models.py:115 Signature class User ( UserMixin , db . Model ): ... User().directshares Show source in models.py:167 determine the user's direct shares that are not mounted anywhere in his tree (i.e. they are at the top level) Signature @property def directshares ( self ): ... User().generate_reset_token Show source in models.py:149 Signature def generate_reset_token ( self , expiration = 3600 ): ... User().password Show source in models.py:138 Signature @property def password ( self ): ... User().password Show source in models.py:142 Signature @password . setter def password ( self , password ): ... User.reset_password Show source in models.py:153 Signature @staticmethod def reset_password ( token , new_password ): ... User().verify_password Show source in models.py:146 Signature def verify_password ( self , password ): ... after_flush Show source in models.py:97 check for any deleted samples or shares NB: This had to be done after the flush, because if a parent sample / mountpoint was deleted, the database would automatically set the corresponding foreign keys to NULL. Not sure if this still applies since we are not really deleting samples anymore. Signature def after_flush ( session , flush_context ): ... deleted_sample_handler Show source in models.py:14 Signature def deleted_sample_handler ( session , sample ): ... deleted_share_handler Show source in models.py:66 Signature def deleted_share_handler ( session , share ): ... load_user Show source in models.py:181 Signature @login_manager . user_loader def load_user ( user_id ): ... record_activity Show source in models.py:472 Signature def record_activity ( type , user = None , sample = None , description = None , commit = False ): ...","title":"Models"},{"location":"app/models/#models","text":"Mercury Sample Manager Index / App / Models Auto-generated documentation for app.models module.","title":"Models"},{"location":"app/models/#action","text":"Show source in models.py:300","title":"Action"},{"location":"app/models/#signature","text":"class Action ( db . Model ): ...","title":"Signature"},{"location":"app/models/#actionhas_read_access","text":"Show source in models.py:318","title":"Action().has_read_access"},{"location":"app/models/#signature_1","text":"def has_read_access ( self , user ): ...","title":"Signature"},{"location":"app/models/#actionhas_write_access","text":"Show source in models.py:327","title":"Action().has_write_access"},{"location":"app/models/#signature_2","text":"def has_write_access ( self , user ): ...","title":"Signature"},{"location":"app/models/#activity","text":"Show source in models.py:443","title":"Activity"},{"location":"app/models/#signature_3","text":"class Activity ( db . Model ): ...","title":"Signature"},{"location":"app/models/#activitytype","text":"Show source in models.py:461","title":"ActivityType"},{"location":"app/models/#signature_4","text":"class ActivityType ( db . Model ): ...","title":"Signature"},{"location":"app/models/#linkusernews","text":"Show source in models.py:394","title":"LinkUserNews"},{"location":"app/models/#signature_5","text":"class LinkUserNews ( db . Model ): ...","title":"Signature"},{"location":"app/models/#news","text":"Show source in models.py:331","title":"News"},{"location":"app/models/#attributes","text":"recipient_id - recipient can be either all users, a specific user, or all users who share a given sample: db.Column(db.Integer, db.ForeignKey('users.id')) recipients - action = db.relationship('Action', backref=\"news\"): db.relationship('LinkUserNews', backref='news', foreign_keys='LinkUserNews.news_id', cascade='delete')","title":"Attributes"},{"location":"app/models/#signature_6","text":"class News ( db . Model ): ...","title":"Signature"},{"location":"app/models/#newsdispatch","text":"Show source in models.py:352","title":"News().dispatch"},{"location":"app/models/#signature_7","text":"def dispatch ( self ): ...","title":"Signature"},{"location":"app/models/#newsrender_content","text":"Show source in models.py:381","title":"News().render_content"},{"location":"app/models/#signature_8","text":"def render_content ( self ): ...","title":"Signature"},{"location":"app/models/#smbresource","text":"Show source in models.py:404","title":"SMBResource"},{"location":"app/models/#signature_9","text":"class SMBResource ( db . Model ): ...","title":"Signature"},{"location":"app/models/#sample","text":"Show source in models.py:186","title":"Sample"},{"location":"app/models/#attributes_1","text":"iscollaborative - in collaborative samples, all sharing users can edit all actions: db.Column(db.Boolean) children - NB: the cascade delete for shares and actions is no longer used because we delete samples by setting isdeleted to True: db.relationship('Sample', backref=db.backref('parent', remote_side=[id]))","title":"Attributes"},{"location":"app/models/#signature_10","text":"class Sample ( db . Model ): ...","title":"Signature"},{"location":"app/models/#sampleis_accessible_for","text":"Show source in models.py:237 go through the owner and shares of this sample and check in the hierarchy (i.e. all parents) if it can be accessed by user if indirect_only is True, only look for indirect shares, i.e. parent shares if direct_only is True, only look for direct shares indirect sharing has priority over direct sharing in order to avoid clogging up the hierarchy","title":"Sample().is_accessible_for"},{"location":"app/models/#signature_11","text":"def is_accessible_for ( self , user , indirect_only = False , direct_only = False ): ...","title":"Signature"},{"location":"app/models/#samplelogical_parent","text":"Show source in models.py:282","title":"Sample().logical_parent"},{"location":"app/models/#signature_12","text":"@property def logical_parent ( self ): ...","title":"Signature"},{"location":"app/models/#samplemountedsamples","text":"Show source in models.py:268 make a list of samples that are mounted in this one by the current user","title":"Sample().mountedsamples"},{"location":"app/models/#signature_13","text":"@property def mountedsamples ( self ): ...","title":"Signature"},{"location":"app/models/#share","text":"Show source in models.py:419","title":"Share"},{"location":"app/models/#signature_14","text":"class Share ( db . Model ): ...","title":"Signature"},{"location":"app/models/#upload","text":"Show source in models.py:430","title":"Upload"},{"location":"app/models/#signature_15","text":"class Upload ( db . Model ): ...","title":"Signature"},{"location":"app/models/#user","text":"Show source in models.py:115","title":"User"},{"location":"app/models/#signature_16","text":"class User ( UserMixin , db . Model ): ...","title":"Signature"},{"location":"app/models/#userdirectshares","text":"Show source in models.py:167 determine the user's direct shares that are not mounted anywhere in his tree (i.e. they are at the top level)","title":"User().directshares"},{"location":"app/models/#signature_17","text":"@property def directshares ( self ): ...","title":"Signature"},{"location":"app/models/#usergenerate_reset_token","text":"Show source in models.py:149","title":"User().generate_reset_token"},{"location":"app/models/#signature_18","text":"def generate_reset_token ( self , expiration = 3600 ): ...","title":"Signature"},{"location":"app/models/#userpassword","text":"Show source in models.py:138","title":"User().password"},{"location":"app/models/#signature_19","text":"@property def password ( self ): ...","title":"Signature"},{"location":"app/models/#userpassword_1","text":"Show source in models.py:142","title":"User().password"},{"location":"app/models/#signature_20","text":"@password . setter def password ( self , password ): ...","title":"Signature"},{"location":"app/models/#userreset_password","text":"Show source in models.py:153","title":"User.reset_password"},{"location":"app/models/#signature_21","text":"@staticmethod def reset_password ( token , new_password ): ...","title":"Signature"},{"location":"app/models/#userverify_password","text":"Show source in models.py:146","title":"User().verify_password"},{"location":"app/models/#signature_22","text":"def verify_password ( self , password ): ...","title":"Signature"},{"location":"app/models/#after_flush","text":"Show source in models.py:97 check for any deleted samples or shares NB: This had to be done after the flush, because if a parent sample / mountpoint was deleted, the database would automatically set the corresponding foreign keys to NULL. Not sure if this still applies since we are not really deleting samples anymore.","title":"after_flush"},{"location":"app/models/#signature_23","text":"def after_flush ( session , flush_context ): ...","title":"Signature"},{"location":"app/models/#deleted_sample_handler","text":"Show source in models.py:14","title":"deleted_sample_handler"},{"location":"app/models/#signature_24","text":"def deleted_sample_handler ( session , sample ): ...","title":"Signature"},{"location":"app/models/#deleted_share_handler","text":"Show source in models.py:66","title":"deleted_share_handler"},{"location":"app/models/#signature_25","text":"def deleted_share_handler ( session , share ): ...","title":"Signature"},{"location":"app/models/#load_user","text":"Show source in models.py:181","title":"load_user"},{"location":"app/models/#signature_26","text":"@login_manager . user_loader def load_user ( user_id ): ...","title":"Signature"},{"location":"app/models/#record_activity","text":"Show source in models.py:472","title":"record_activity"},{"location":"app/models/#signature_27","text":"def record_activity ( type , user = None , sample = None , description = None , commit = False ): ...","title":"Signature"},{"location":"app/smbinterface/","text":"SMBInterface Mercury Sample Manager Index / App / SMBInterface Auto-generated documentation for app.smbinterface module. SMBInterface Show source in smbinterface.py:8 Signature class SMBInterface : def __init__ ( self ): ... SMBInterface().get_file Show source in smbinterface.py:14 Creates a temporary file object and reads the content of a remote SMB file into it. Parameters path : str The path pointing to the SMB resource and location within the resource. Returns file : file object A file object. Signature def get_file ( self , path ): ... SMBInterface().list_path Show source in smbinterface.py:53 Signature def list_path ( self , path ): ... SMBInterface().process_smb_path Show source in smbinterface.py:73 Splits up the SMB path of type \"/ResourceName/path_in_resource\". The path in the resource is not necessarily the same as the path on the server, because a resource can already point to a subdirectory on the server. If the path is empty, this function will return None, ''. The same will be returned if the requested resource does not exist. Parameters path: str Returns resource : SMBResource path_on_server : str Signature def process_smb_path ( self , path ): ...","title":"SMBInterface"},{"location":"app/smbinterface/#smbinterface","text":"Mercury Sample Manager Index / App / SMBInterface Auto-generated documentation for app.smbinterface module.","title":"SMBInterface"},{"location":"app/smbinterface/#smbinterface_1","text":"Show source in smbinterface.py:8","title":"SMBInterface"},{"location":"app/smbinterface/#signature","text":"class SMBInterface : def __init__ ( self ): ...","title":"Signature"},{"location":"app/smbinterface/#smbinterfaceget_file","text":"Show source in smbinterface.py:14 Creates a temporary file object and reads the content of a remote SMB file into it.","title":"SMBInterface().get_file"},{"location":"app/smbinterface/#parameters","text":"path : str The path pointing to the SMB resource and location within the resource.","title":"Parameters"},{"location":"app/smbinterface/#returns","text":"file : file object A file object.","title":"Returns"},{"location":"app/smbinterface/#signature_1","text":"def get_file ( self , path ): ...","title":"Signature"},{"location":"app/smbinterface/#smbinterfacelist_path","text":"Show source in smbinterface.py:53","title":"SMBInterface().list_path"},{"location":"app/smbinterface/#signature_2","text":"def list_path ( self , path ): ...","title":"Signature"},{"location":"app/smbinterface/#smbinterfaceprocess_smb_path","text":"Show source in smbinterface.py:73 Splits up the SMB path of type \"/ResourceName/path_in_resource\". The path in the resource is not necessarily the same as the path on the server, because a resource can already point to a subdirectory on the server. If the path is empty, this function will return None, ''. The same will be returned if the requested resource does not exist.","title":"SMBInterface().process_smb_path"},{"location":"app/smbinterface/#parameters_1","text":"path: str","title":"Parameters"},{"location":"app/smbinterface/#returns_1","text":"resource : SMBResource path_on_server : str","title":"Returns"},{"location":"app/smbinterface/#signature_3","text":"def process_smb_path ( self , path ): ...","title":"Signature"},{"location":"app/usagestats/","text":"Usagestats Mercury Sample Manager Index / App / Usagestats Auto-generated documentation for app.usagestats module. UsageStatisticsThread Show source in usagestats.py:27 Signature class UsageStatisticsThread ( threading . Thread ): def __init__ ( self , app ): ... UsageStatisticsThread().run Show source in usagestats.py:37 Signature def run ( self ): ... filesystem_usage Show source in usagestats.py:88 Signature def filesystem_usage ( app ): ...","title":"Usagestats"},{"location":"app/usagestats/#usagestats","text":"Mercury Sample Manager Index / App / Usagestats Auto-generated documentation for app.usagestats module.","title":"Usagestats"},{"location":"app/usagestats/#usagestatisticsthread","text":"Show source in usagestats.py:27","title":"UsageStatisticsThread"},{"location":"app/usagestats/#signature","text":"class UsageStatisticsThread ( threading . Thread ): def __init__ ( self , app ): ...","title":"Signature"},{"location":"app/usagestats/#usagestatisticsthreadrun","text":"Show source in usagestats.py:37","title":"UsageStatisticsThread().run"},{"location":"app/usagestats/#signature_1","text":"def run ( self ): ...","title":"Signature"},{"location":"app/usagestats/#filesystem_usage","text":"Show source in usagestats.py:88","title":"filesystem_usage"},{"location":"app/usagestats/#signature_2","text":"def filesystem_usage ( app ): ...","title":"Signature"},{"location":"app/validators/","text":"Validators Mercury Sample Manager Index / App / Validators Auto-generated documentation for app.validators module. email_already_registered Show source in validators.py:5 Signature def email_already_registered ( form , field ): ... username_already_registered Show source in validators.py:10 Signature def username_already_registered ( form , field ): ... validate_form_field Show source in validators.py:15 Signature def validate_form_field ( form , field , value ): ...","title":"Validators"},{"location":"app/validators/#validators","text":"Mercury Sample Manager Index / App / Validators Auto-generated documentation for app.validators module.","title":"Validators"},{"location":"app/validators/#email_already_registered","text":"Show source in validators.py:5","title":"email_already_registered"},{"location":"app/validators/#signature","text":"def email_already_registered ( form , field ): ...","title":"Signature"},{"location":"app/validators/#username_already_registered","text":"Show source in validators.py:10","title":"username_already_registered"},{"location":"app/validators/#signature_1","text":"def username_already_registered ( form , field ): ...","title":"Signature"},{"location":"app/validators/#validate_form_field","text":"Show source in validators.py:15","title":"validate_form_field"},{"location":"app/validators/#signature_2","text":"def validate_form_field ( form , field , value ): ...","title":"Signature"},{"location":"app/auth/","text":"Auth Mercury Sample Manager Index / App / Auth Auto-generated documentation for app.auth module. Modules Forms Views","title":"Auth"},{"location":"app/auth/#auth","text":"Mercury Sample Manager Index / App / Auth Auto-generated documentation for app.auth module.","title":"Auth"},{"location":"app/auth/#modules","text":"Forms Views","title":"Modules"},{"location":"app/auth/forms/","text":"Forms Mercury Sample Manager Index / App / Auth / Forms Auto-generated documentation for app.auth.forms module. LoginForm Show source in forms.py:6 Signature class LoginForm ( FlaskForm ): ... PasswordResetForm Show source in forms.py:18 Signature class PasswordResetForm ( FlaskForm ): ... PasswordResetRequestForm Show source in forms.py:13 Signature class PasswordResetRequestForm ( FlaskForm ): ...","title":"Forms"},{"location":"app/auth/forms/#forms","text":"Mercury Sample Manager Index / App / Auth / Forms Auto-generated documentation for app.auth.forms module.","title":"Forms"},{"location":"app/auth/forms/#loginform","text":"Show source in forms.py:6","title":"LoginForm"},{"location":"app/auth/forms/#signature","text":"class LoginForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/auth/forms/#passwordresetform","text":"Show source in forms.py:18","title":"PasswordResetForm"},{"location":"app/auth/forms/#signature_1","text":"class PasswordResetForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/auth/forms/#passwordresetrequestform","text":"Show source in forms.py:13","title":"PasswordResetRequestForm"},{"location":"app/auth/forms/#signature_2","text":"class PasswordResetRequestForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/auth/views/","text":"Views Mercury Sample Manager Index / App / Auth / Views Auto-generated documentation for app.auth.views module. login Show source in views.py:10 Signature @auth . route ( \"/login\" , methods = [ \"GET\" , \"POST\" ]) def login (): ... logout Show source in views.py:112 Signature @auth . route ( \"/logout\" ) @login_required def logout (): ... password_reset Show source in views.py:97 Signature @auth . route ( \"/reset/<token>\" , methods = [ \"GET\" , \"POST\" ]) def password_reset ( token ): ... password_reset_request Show source in views.py:70 Signature @auth . route ( \"/reset\" , methods = [ \"GET\" , \"POST\" ]) def password_reset_request (): ...","title":"Views"},{"location":"app/auth/views/#views","text":"Mercury Sample Manager Index / App / Auth / Views Auto-generated documentation for app.auth.views module.","title":"Views"},{"location":"app/auth/views/#login","text":"Show source in views.py:10","title":"login"},{"location":"app/auth/views/#signature","text":"@auth . route ( \"/login\" , methods = [ \"GET\" , \"POST\" ]) def login (): ...","title":"Signature"},{"location":"app/auth/views/#logout","text":"Show source in views.py:112","title":"logout"},{"location":"app/auth/views/#signature_1","text":"@auth . route ( \"/logout\" ) @login_required def logout (): ...","title":"Signature"},{"location":"app/auth/views/#password_reset","text":"Show source in views.py:97","title":"password_reset"},{"location":"app/auth/views/#signature_2","text":"@auth . route ( \"/reset/<token>\" , methods = [ \"GET\" , \"POST\" ]) def password_reset ( token ): ...","title":"Signature"},{"location":"app/auth/views/#password_reset_request","text":"Show source in views.py:70","title":"password_reset_request"},{"location":"app/auth/views/#signature_3","text":"@auth . route ( \"/reset\" , methods = [ \"GET\" , \"POST\" ]) def password_reset_request (): ...","title":"Signature"},{"location":"app/browser/","text":"Browser Mercury Sample Manager Index / App / Browser Auto-generated documentation for app.browser module. Modules Views","title":"Browser"},{"location":"app/browser/#browser","text":"Mercury Sample Manager Index / App / Browser Auto-generated documentation for app.browser module.","title":"Browser"},{"location":"app/browser/#modules","text":"Views","title":"Modules"},{"location":"app/browser/views/","text":"Views Mercury Sample Manager Index / App / Browser / Views Auto-generated documentation for app.browser.views module. FileTile Show source in views.py:24 Signature class FileTile : ... check_stored_file Show source in views.py:36 Checks file size and SHA-256 hash for an upload and looks for duplicates in the database. If a duplicate is found, delete this upload and return the duplicate. NB: this means that if we upload two attachments with identical content but different names, the downloaded file will have the name of the first uploaded file This is separate from the store_file function, because store_file is specific to images right now and we might want to use the duplicate check for other file types, too (in the future). Parameters upload : Upload Returns upload : Upload The upload or its duplicate. Signature def check_stored_file ( upload ): ... imagebrowser Show source in views.py:421 Signature @browser . route ( \"/\" , defaults = { \"smb_path\" : \"\" }) @browser . route ( \"/<path:smb_path>\" ) @login_required def imagebrowser ( smb_path ): ... inspectpath Show source in views.py:572 Signature @browser . route ( \"/inspectpath\" , methods = [ \"POST\" ]) @login_required def inspectpath (): ... inspectresource Show source in views.py:587 Signature @browser . route ( \"/inspectresource\" , methods = [ \"POST\" ]) @login_required def inspectresource (): ... make_preview Show source in views.py:128 Signature def make_preview ( upload , image ): ... make_rotated Show source in views.py:145 Signature def make_rotated ( upload , angle , fullsize ): ... retrieve_attachment Show source in views.py:336 Retrieves an attachment that was uploaded to the server. Parameters upload_id : int The ID of the attachment to be retrieved, corresponding to a row in the uploads database table. Signature @browser . route ( \"/ulatt/<upload_id>\" ) @login_required def retrieve_attachment ( upload_id ): ... retrieve_image Show source in views.py:268 Retrieves an image that was uploaded to the server, either by uploading through the browser or by transfer from a SMB resource. The POST request is used by the CKEditor plugin imagerotate to retrieve potential error messages. Parameters upload_id : int The ID of the image to be retrieved, corresponding to a row in the uploads database table. Signature @browser . route ( \"/ulimg/<upload_id>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def retrieve_image ( upload_id ): ... retrieve_smb_image Show source in views.py:377 Retrieves an image from a SMB resource. This is only for the browser, so we will send back thumbnails to speed up the communication a bit. Parameters path : str The path to the image, consisting of the name of the SMB resource and the address within the resource. Signature @browser . route ( \"/smbimg/<path:path>\" ) @login_required def retrieve_smb_image ( path ): ... save_from_smb Show source in views.py:525 Signature @browser . route ( \"/savefromsmb\" , methods = [ \"POST\" ]) @login_required def save_from_smb (): ... store_attachment Show source in views.py:244 Stores an image file in the upload database and saves it in the upload folder, checking for duplicates. Parameters file_obj : FileStorage object or any other object with save() function source : str ext : str Returns upload : Upload object or None message : str upload URL if upload succeeds or error message if it fails Signature def store_attachment ( file_obj , source , ext ): ... store_file Show source in views.py:81 Stores a file in the upload database and saves it in the upload folder, checking for duplicates. Parameters file_obj : FileStorage or Image object, or any other object with save() function source : str ext : str type : str 'img' or 'att' Returns upload : Upload object or None message : str upload URL if upload succeeds or error message if it fails Signature def store_file ( file_obj , source , ext , type ): ... store_image Show source in views.py:165 Stores an image file in the upload database and saves it in the upload folder, checking for duplicates. Parameters file_obj : file object source : str ext : str Returns upload : Upload object or None message : str upload URL if upload succeeds or error message if it fails dimensions : tuple (width, height) of the image Signature def store_image ( file_obj , source , ext ): ... strip_unit Show source in views.py:629 Signature def strip_unit ( s ): ... uploadfile Show source in views.py:491 Signature @browser . route ( \"/upload\" , methods = [ \"POST\" ]) @login_required def uploadfile (): ...","title":"Views"},{"location":"app/browser/views/#views","text":"Mercury Sample Manager Index / App / Browser / Views Auto-generated documentation for app.browser.views module.","title":"Views"},{"location":"app/browser/views/#filetile","text":"Show source in views.py:24","title":"FileTile"},{"location":"app/browser/views/#signature","text":"class FileTile : ...","title":"Signature"},{"location":"app/browser/views/#check_stored_file","text":"Show source in views.py:36 Checks file size and SHA-256 hash for an upload and looks for duplicates in the database. If a duplicate is found, delete this upload and return the duplicate. NB: this means that if we upload two attachments with identical content but different names, the downloaded file will have the name of the first uploaded file This is separate from the store_file function, because store_file is specific to images right now and we might want to use the duplicate check for other file types, too (in the future).","title":"check_stored_file"},{"location":"app/browser/views/#parameters","text":"upload : Upload","title":"Parameters"},{"location":"app/browser/views/#returns","text":"upload : Upload The upload or its duplicate.","title":"Returns"},{"location":"app/browser/views/#signature_1","text":"def check_stored_file ( upload ): ...","title":"Signature"},{"location":"app/browser/views/#imagebrowser","text":"Show source in views.py:421","title":"imagebrowser"},{"location":"app/browser/views/#signature_2","text":"@browser . route ( \"/\" , defaults = { \"smb_path\" : \"\" }) @browser . route ( \"/<path:smb_path>\" ) @login_required def imagebrowser ( smb_path ): ...","title":"Signature"},{"location":"app/browser/views/#inspectpath","text":"Show source in views.py:572","title":"inspectpath"},{"location":"app/browser/views/#signature_3","text":"@browser . route ( \"/inspectpath\" , methods = [ \"POST\" ]) @login_required def inspectpath (): ...","title":"Signature"},{"location":"app/browser/views/#inspectresource","text":"Show source in views.py:587","title":"inspectresource"},{"location":"app/browser/views/#signature_4","text":"@browser . route ( \"/inspectresource\" , methods = [ \"POST\" ]) @login_required def inspectresource (): ...","title":"Signature"},{"location":"app/browser/views/#make_preview","text":"Show source in views.py:128","title":"make_preview"},{"location":"app/browser/views/#signature_5","text":"def make_preview ( upload , image ): ...","title":"Signature"},{"location":"app/browser/views/#make_rotated","text":"Show source in views.py:145","title":"make_rotated"},{"location":"app/browser/views/#signature_6","text":"def make_rotated ( upload , angle , fullsize ): ...","title":"Signature"},{"location":"app/browser/views/#retrieve_attachment","text":"Show source in views.py:336 Retrieves an attachment that was uploaded to the server.","title":"retrieve_attachment"},{"location":"app/browser/views/#parameters_1","text":"upload_id : int The ID of the attachment to be retrieved, corresponding to a row in the uploads database table.","title":"Parameters"},{"location":"app/browser/views/#signature_7","text":"@browser . route ( \"/ulatt/<upload_id>\" ) @login_required def retrieve_attachment ( upload_id ): ...","title":"Signature"},{"location":"app/browser/views/#retrieve_image","text":"Show source in views.py:268 Retrieves an image that was uploaded to the server, either by uploading through the browser or by transfer from a SMB resource. The POST request is used by the CKEditor plugin imagerotate to retrieve potential error messages.","title":"retrieve_image"},{"location":"app/browser/views/#parameters_2","text":"upload_id : int The ID of the image to be retrieved, corresponding to a row in the uploads database table.","title":"Parameters"},{"location":"app/browser/views/#signature_8","text":"@browser . route ( \"/ulimg/<upload_id>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def retrieve_image ( upload_id ): ...","title":"Signature"},{"location":"app/browser/views/#retrieve_smb_image","text":"Show source in views.py:377 Retrieves an image from a SMB resource. This is only for the browser, so we will send back thumbnails to speed up the communication a bit.","title":"retrieve_smb_image"},{"location":"app/browser/views/#parameters_3","text":"path : str The path to the image, consisting of the name of the SMB resource and the address within the resource.","title":"Parameters"},{"location":"app/browser/views/#signature_9","text":"@browser . route ( \"/smbimg/<path:path>\" ) @login_required def retrieve_smb_image ( path ): ...","title":"Signature"},{"location":"app/browser/views/#save_from_smb","text":"Show source in views.py:525","title":"save_from_smb"},{"location":"app/browser/views/#signature_10","text":"@browser . route ( \"/savefromsmb\" , methods = [ \"POST\" ]) @login_required def save_from_smb (): ...","title":"Signature"},{"location":"app/browser/views/#store_attachment","text":"Show source in views.py:244 Stores an image file in the upload database and saves it in the upload folder, checking for duplicates.","title":"store_attachment"},{"location":"app/browser/views/#parameters_4","text":"file_obj : FileStorage object or any other object with save() function source : str ext : str","title":"Parameters"},{"location":"app/browser/views/#returns_1","text":"upload : Upload object or None message : str upload URL if upload succeeds or error message if it fails","title":"Returns"},{"location":"app/browser/views/#signature_11","text":"def store_attachment ( file_obj , source , ext ): ...","title":"Signature"},{"location":"app/browser/views/#store_file","text":"Show source in views.py:81 Stores a file in the upload database and saves it in the upload folder, checking for duplicates.","title":"store_file"},{"location":"app/browser/views/#parameters_5","text":"file_obj : FileStorage or Image object, or any other object with save() function source : str ext : str type : str 'img' or 'att'","title":"Parameters"},{"location":"app/browser/views/#returns_2","text":"upload : Upload object or None message : str upload URL if upload succeeds or error message if it fails","title":"Returns"},{"location":"app/browser/views/#signature_12","text":"def store_file ( file_obj , source , ext , type ): ...","title":"Signature"},{"location":"app/browser/views/#store_image","text":"Show source in views.py:165 Stores an image file in the upload database and saves it in the upload folder, checking for duplicates.","title":"store_image"},{"location":"app/browser/views/#parameters_6","text":"file_obj : file object source : str ext : str","title":"Parameters"},{"location":"app/browser/views/#returns_3","text":"upload : Upload object or None message : str upload URL if upload succeeds or error message if it fails dimensions : tuple (width, height) of the image","title":"Returns"},{"location":"app/browser/views/#signature_13","text":"def store_image ( file_obj , source , ext ): ...","title":"Signature"},{"location":"app/browser/views/#strip_unit","text":"Show source in views.py:629","title":"strip_unit"},{"location":"app/browser/views/#signature_14","text":"def strip_unit ( s ): ...","title":"Signature"},{"location":"app/browser/views/#uploadfile","text":"Show source in views.py:491","title":"uploadfile"},{"location":"app/browser/views/#signature_15","text":"@browser . route ( \"/upload\" , methods = [ \"POST\" ]) @login_required def uploadfile (): ...","title":"Signature"},{"location":"app/main/","text":"Main Mercury Sample Manager Index / App / Main Auto-generated documentation for app.main module. Modules Errors Forms Views","title":"Main"},{"location":"app/main/#main","text":"Mercury Sample Manager Index / App / Main Auto-generated documentation for app.main module.","title":"Main"},{"location":"app/main/#modules","text":"Errors Forms Views","title":"Modules"},{"location":"app/main/errors/","text":"Errors Mercury Sample Manager Index / App / Main / Errors Auto-generated documentation for app.main.errors module. forbidden Show source in errors.py:7 Signature @main . app_errorhandler ( 403 ) def forbidden ( e ): ... internal_server_error Show source in errors.py:17 Signature @main . app_errorhandler ( 500 ) def internal_server_error ( e ): ... page_not_found Show source in errors.py:12 Signature @main . app_errorhandler ( 404 ) def page_not_found ( e ): ... unhandled_exception Show source in errors.py:22 Signature @main . errorhandler ( Exception ) def unhandled_exception ( e ): ...","title":"Errors"},{"location":"app/main/errors/#errors","text":"Mercury Sample Manager Index / App / Main / Errors Auto-generated documentation for app.main.errors module.","title":"Errors"},{"location":"app/main/errors/#forbidden","text":"Show source in errors.py:7","title":"forbidden"},{"location":"app/main/errors/#signature","text":"@main . app_errorhandler ( 403 ) def forbidden ( e ): ...","title":"Signature"},{"location":"app/main/errors/#internal_server_error","text":"Show source in errors.py:17","title":"internal_server_error"},{"location":"app/main/errors/#signature_1","text":"@main . app_errorhandler ( 500 ) def internal_server_error ( e ): ...","title":"Signature"},{"location":"app/main/errors/#page_not_found","text":"Show source in errors.py:12","title":"page_not_found"},{"location":"app/main/errors/#signature_2","text":"@main . app_errorhandler ( 404 ) def page_not_found ( e ): ...","title":"Signature"},{"location":"app/main/errors/#unhandled_exception","text":"Show source in errors.py:22","title":"unhandled_exception"},{"location":"app/main/errors/#signature_3","text":"@main . errorhandler ( Exception ) def unhandled_exception ( e ): ...","title":"Signature"},{"location":"app/main/forms/","text":"Forms Mercury Sample Manager Index / App / Main / Forms Auto-generated documentation for app.main.forms module. MarkActionAsNewsForm Show source in forms.py:31 Signature class MarkActionAsNewsForm ( FlaskForm ): ... NewActionForm Show source in forms.py:7 Signature class NewActionForm ( FlaskForm ): ... NewSampleForm Show source in forms.py:13 Signature class NewSampleForm ( FlaskForm ): ... NewSampleForm().validate_newsampleparentid Show source in forms.py:25 Signature def validate_newsampleparentid ( self , field ): ...","title":"Forms"},{"location":"app/main/forms/#forms","text":"Mercury Sample Manager Index / App / Main / Forms Auto-generated documentation for app.main.forms module.","title":"Forms"},{"location":"app/main/forms/#markactionasnewsform","text":"Show source in forms.py:31","title":"MarkActionAsNewsForm"},{"location":"app/main/forms/#signature","text":"class MarkActionAsNewsForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/main/forms/#newactionform","text":"Show source in forms.py:7","title":"NewActionForm"},{"location":"app/main/forms/#signature_1","text":"class NewActionForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/main/forms/#newsampleform","text":"Show source in forms.py:13","title":"NewSampleForm"},{"location":"app/main/forms/#signature_2","text":"class NewSampleForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/main/forms/#newsampleformvalidate_newsampleparentid","text":"Show source in forms.py:25","title":"NewSampleForm().validate_newsampleparentid"},{"location":"app/main/forms/#signature_3","text":"def validate_newsampleparentid ( self , field ): ...","title":"Signature"},{"location":"app/main/views/","text":"Views Mercury Sample Manager Index / App / Main / Views Auto-generated documentation for app.main.views module. Attributes supported_targets - define supported fields: {'sample': {'dbobject': Sample, 'auth': 'owner', 'fields': {'name': lambda x,: validate_form_field(NewSampleForm(), 'newsamplename', x), 'description': str, 'image': str}}, 'action': {'dbobject': Action, 'auth': 'action_auth', 'fields': {'timestamp': lambda x,: datetime.strptime(x, '%Y-%m-%d'), 'description': str}}, 'share': {'dbobject': Share, 'auth': None, 'fields': {}}, 'smbresource': {'dbobject': SMBResource, 'auth': 'admin', 'fields': {'name': str, 'servername': str, 'serveraddr': str, 'sharename': str, 'path': str, 'userid': str, 'password': str}}, 'user': {'dbobject': User, 'auth': 'admin', 'fields': {'username': lambda x,: validate_form_field(NewUserForm(), 'username', x), 'email': lambda x,: validate_form_field(NewUserForm(), 'email', x), 'is_admin': validate_is_admin}}} changeparent Show source in views.py:484 Signature @main . route ( \"/changeparent\" , methods = [ \"POST\" ]) @login_required def changeparent (): ... createshare Show source in views.py:389 Signature @main . route ( \"/createshare\" , methods = [ \"POST\" ]) @login_required def createshare (): ... deleteaction Show source in views.py:426 Signature @main . route ( \"/delaction/<actionid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def deleteaction ( actionid ): ... deletesample Show source in views.py:439 Signature @main . route ( \"/delsample/<sampleid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def deletesample ( sampleid ): ... deleteshare Show source in views.py:452 Signature @main . route ( \"/delshare/<shareid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def deleteshare ( shareid ): ... editor Show source in views.py:185 Signature @main . route ( \"/editor/<sampleid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def editor ( sampleid ): ... getfield Show source in views.py:746 Signature @main . route ( \"/get/<target>/<field>/<id>\" , methods = [ \"GET\" ]) @login_required def getfield ( target , field , id ): ... help Show source in views.py:231 Signature @main . route ( \"/help\" ) @login_required def help (): ... index Show source in views.py:28 Signature @main . route ( \"/\" ) @main . route ( \"/sample/<sampleid>\" ) def index ( sampleid = 0 ): ... login_as Show source in views.py:348 Signature @main . route ( \"/loginas\" , methods = [ \"GET\" ]) @login_required def login_as (): ... markasnews Show source in views.py:566 Signature @main . route ( \"/markasnews\" , methods = [ \"POST\" ]) @login_required def markasnews (): ... navbar Show source in views.py:160 Signature @main . route ( \"/navbar\" , methods = [ \"GET\" ]) @login_required def navbar (): ... newaction Show source in views.py:632 Signature @main . route ( \"/newaction/<sampleid>\" , methods = [ \"POST\" ]) @login_required def newaction ( sampleid ): ... newsample Show source in views.py:539 Signature @main . route ( \"/newsample\" , methods = [ \"POST\" ]) @login_required def newsample (): ... search Show source in views.py:238 Signature @main . route ( \"/search\" , methods = [ \"GET\" ]) @login_required def search (): ... static_file Show source in views.py:677 Signature @main . route ( \"/plugins/<path:path>\" ) @login_required def static_file ( path ): ... str_to_bool Show source in views.py:684 Signature def str_to_bool ( str ): ... swapactionorder Show source in views.py:665 Signature @main . route ( \"/swapactionorder\" , methods = [ \"POST\" ]) @login_required def swapactionorder (): ... togglearchived Show source in views.py:363 Signature @main . route ( \"/togglearchived\" , methods = [ \"POST\" ]) @login_required def togglearchived (): ... togglecollaborative Show source in views.py:376 Signature @main . route ( \"/togglecollaborative\" , methods = [ \"POST\" ]) @login_required def togglecollaborative (): ... unmarkasnews Show source in views.py:602 Signature @main . route ( \"/unmarkasnews\" , methods = [ \"POST\" ]) @login_required def unmarkasnews (): ... updatefield Show source in views.py:777 Signature @main . route ( \"/set/<target>/<field>/<id>\" , methods = [ \"POST\" ]) @login_required def updatefield ( target , field , id ): ... userlist Show source in views.py:290 Signature @main . route ( \"/userlist\" , methods = [ \"POST\" ]) @login_required def userlist (): ... validate_is_admin Show source in views.py:693 Signature def validate_is_admin ( str , item ): ... welcome Show source in views.py:55 Signature @main . route ( \"/welcome\" ) @login_required def welcome (): ...","title":"Views"},{"location":"app/main/views/#views","text":"Mercury Sample Manager Index / App / Main / Views Auto-generated documentation for app.main.views module.","title":"Views"},{"location":"app/main/views/#attributes","text":"supported_targets - define supported fields: {'sample': {'dbobject': Sample, 'auth': 'owner', 'fields': {'name': lambda x,: validate_form_field(NewSampleForm(), 'newsamplename', x), 'description': str, 'image': str}}, 'action': {'dbobject': Action, 'auth': 'action_auth', 'fields': {'timestamp': lambda x,: datetime.strptime(x, '%Y-%m-%d'), 'description': str}}, 'share': {'dbobject': Share, 'auth': None, 'fields': {}}, 'smbresource': {'dbobject': SMBResource, 'auth': 'admin', 'fields': {'name': str, 'servername': str, 'serveraddr': str, 'sharename': str, 'path': str, 'userid': str, 'password': str}}, 'user': {'dbobject': User, 'auth': 'admin', 'fields': {'username': lambda x,: validate_form_field(NewUserForm(), 'username', x), 'email': lambda x,: validate_form_field(NewUserForm(), 'email', x), 'is_admin': validate_is_admin}}}","title":"Attributes"},{"location":"app/main/views/#changeparent","text":"Show source in views.py:484","title":"changeparent"},{"location":"app/main/views/#signature","text":"@main . route ( \"/changeparent\" , methods = [ \"POST\" ]) @login_required def changeparent (): ...","title":"Signature"},{"location":"app/main/views/#createshare","text":"Show source in views.py:389","title":"createshare"},{"location":"app/main/views/#signature_1","text":"@main . route ( \"/createshare\" , methods = [ \"POST\" ]) @login_required def createshare (): ...","title":"Signature"},{"location":"app/main/views/#deleteaction","text":"Show source in views.py:426","title":"deleteaction"},{"location":"app/main/views/#signature_2","text":"@main . route ( \"/delaction/<actionid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def deleteaction ( actionid ): ...","title":"Signature"},{"location":"app/main/views/#deletesample","text":"Show source in views.py:439","title":"deletesample"},{"location":"app/main/views/#signature_3","text":"@main . route ( \"/delsample/<sampleid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def deletesample ( sampleid ): ...","title":"Signature"},{"location":"app/main/views/#deleteshare","text":"Show source in views.py:452","title":"deleteshare"},{"location":"app/main/views/#signature_4","text":"@main . route ( \"/delshare/<shareid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def deleteshare ( shareid ): ...","title":"Signature"},{"location":"app/main/views/#editor","text":"Show source in views.py:185","title":"editor"},{"location":"app/main/views/#signature_5","text":"@main . route ( \"/editor/<sampleid>\" , methods = [ \"GET\" , \"POST\" ]) @login_required def editor ( sampleid ): ...","title":"Signature"},{"location":"app/main/views/#getfield","text":"Show source in views.py:746","title":"getfield"},{"location":"app/main/views/#signature_6","text":"@main . route ( \"/get/<target>/<field>/<id>\" , methods = [ \"GET\" ]) @login_required def getfield ( target , field , id ): ...","title":"Signature"},{"location":"app/main/views/#help","text":"Show source in views.py:231","title":"help"},{"location":"app/main/views/#signature_7","text":"@main . route ( \"/help\" ) @login_required def help (): ...","title":"Signature"},{"location":"app/main/views/#index","text":"Show source in views.py:28","title":"index"},{"location":"app/main/views/#signature_8","text":"@main . route ( \"/\" ) @main . route ( \"/sample/<sampleid>\" ) def index ( sampleid = 0 ): ...","title":"Signature"},{"location":"app/main/views/#login_as","text":"Show source in views.py:348","title":"login_as"},{"location":"app/main/views/#signature_9","text":"@main . route ( \"/loginas\" , methods = [ \"GET\" ]) @login_required def login_as (): ...","title":"Signature"},{"location":"app/main/views/#markasnews","text":"Show source in views.py:566","title":"markasnews"},{"location":"app/main/views/#signature_10","text":"@main . route ( \"/markasnews\" , methods = [ \"POST\" ]) @login_required def markasnews (): ...","title":"Signature"},{"location":"app/main/views/#navbar","text":"Show source in views.py:160","title":"navbar"},{"location":"app/main/views/#signature_11","text":"@main . route ( \"/navbar\" , methods = [ \"GET\" ]) @login_required def navbar (): ...","title":"Signature"},{"location":"app/main/views/#newaction","text":"Show source in views.py:632","title":"newaction"},{"location":"app/main/views/#signature_12","text":"@main . route ( \"/newaction/<sampleid>\" , methods = [ \"POST\" ]) @login_required def newaction ( sampleid ): ...","title":"Signature"},{"location":"app/main/views/#newsample","text":"Show source in views.py:539","title":"newsample"},{"location":"app/main/views/#signature_13","text":"@main . route ( \"/newsample\" , methods = [ \"POST\" ]) @login_required def newsample (): ...","title":"Signature"},{"location":"app/main/views/#search","text":"Show source in views.py:238","title":"search"},{"location":"app/main/views/#signature_14","text":"@main . route ( \"/search\" , methods = [ \"GET\" ]) @login_required def search (): ...","title":"Signature"},{"location":"app/main/views/#static_file","text":"Show source in views.py:677","title":"static_file"},{"location":"app/main/views/#signature_15","text":"@main . route ( \"/plugins/<path:path>\" ) @login_required def static_file ( path ): ...","title":"Signature"},{"location":"app/main/views/#str_to_bool","text":"Show source in views.py:684","title":"str_to_bool"},{"location":"app/main/views/#signature_16","text":"def str_to_bool ( str ): ...","title":"Signature"},{"location":"app/main/views/#swapactionorder","text":"Show source in views.py:665","title":"swapactionorder"},{"location":"app/main/views/#signature_17","text":"@main . route ( \"/swapactionorder\" , methods = [ \"POST\" ]) @login_required def swapactionorder (): ...","title":"Signature"},{"location":"app/main/views/#togglearchived","text":"Show source in views.py:363","title":"togglearchived"},{"location":"app/main/views/#signature_18","text":"@main . route ( \"/togglearchived\" , methods = [ \"POST\" ]) @login_required def togglearchived (): ...","title":"Signature"},{"location":"app/main/views/#togglecollaborative","text":"Show source in views.py:376","title":"togglecollaborative"},{"location":"app/main/views/#signature_19","text":"@main . route ( \"/togglecollaborative\" , methods = [ \"POST\" ]) @login_required def togglecollaborative (): ...","title":"Signature"},{"location":"app/main/views/#unmarkasnews","text":"Show source in views.py:602","title":"unmarkasnews"},{"location":"app/main/views/#signature_20","text":"@main . route ( \"/unmarkasnews\" , methods = [ \"POST\" ]) @login_required def unmarkasnews (): ...","title":"Signature"},{"location":"app/main/views/#updatefield","text":"Show source in views.py:777","title":"updatefield"},{"location":"app/main/views/#signature_21","text":"@main . route ( \"/set/<target>/<field>/<id>\" , methods = [ \"POST\" ]) @login_required def updatefield ( target , field , id ): ...","title":"Signature"},{"location":"app/main/views/#userlist","text":"Show source in views.py:290","title":"userlist"},{"location":"app/main/views/#signature_22","text":"@main . route ( \"/userlist\" , methods = [ \"POST\" ]) @login_required def userlist (): ...","title":"Signature"},{"location":"app/main/views/#validate_is_admin","text":"Show source in views.py:693","title":"validate_is_admin"},{"location":"app/main/views/#signature_23","text":"def validate_is_admin ( str , item ): ...","title":"Signature"},{"location":"app/main/views/#welcome","text":"Show source in views.py:55","title":"welcome"},{"location":"app/main/views/#signature_24","text":"@main . route ( \"/welcome\" ) @login_required def welcome (): ...","title":"Signature"},{"location":"app/printdata/","text":"Printdata Mercury Sample Manager Index / App / Printdata Auto-generated documentation for app.printdata module. Modules Forms Views","title":"Printdata"},{"location":"app/printdata/#printdata","text":"Mercury Sample Manager Index / App / Printdata Auto-generated documentation for app.printdata module.","title":"Printdata"},{"location":"app/printdata/#modules","text":"Forms Views","title":"Modules"},{"location":"app/printdata/forms/","text":"Forms Mercury Sample Manager Index / App / Printdata / Forms Auto-generated documentation for app.printdata.forms module. RequestActionsForm Show source in forms.py:5 Signature class RequestActionsForm ( FlaskForm ): ...","title":"Forms"},{"location":"app/printdata/forms/#forms","text":"Mercury Sample Manager Index / App / Printdata / Forms Auto-generated documentation for app.printdata.forms module.","title":"Forms"},{"location":"app/printdata/forms/#requestactionsform","text":"Show source in forms.py:5","title":"RequestActionsForm"},{"location":"app/printdata/forms/#signature","text":"class RequestActionsForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/printdata/views/","text":"Views Mercury Sample Manager Index / App / Printdata / Views Auto-generated documentation for app.printdata.views module. overview Show source in views.py:9 Signature @printdata . route ( \"/\" , methods = [ \"GET\" , \"POST\" ]) @login_required def overview (): ...","title":"Views"},{"location":"app/printdata/views/#views","text":"Mercury Sample Manager Index / App / Printdata / Views Auto-generated documentation for app.printdata.views module.","title":"Views"},{"location":"app/printdata/views/#overview","text":"Show source in views.py:9","title":"overview"},{"location":"app/printdata/views/#signature","text":"@printdata . route ( \"/\" , methods = [ \"GET\" , \"POST\" ]) @login_required def overview (): ...","title":"Signature"},{"location":"app/profile/","text":"Profile Mercury Sample Manager Index / App / Profile Auto-generated documentation for app.profile module. Modules Forms Views","title":"Profile"},{"location":"app/profile/#profile","text":"Mercury Sample Manager Index / App / Profile Auto-generated documentation for app.profile module.","title":"Profile"},{"location":"app/profile/#modules","text":"Forms Views","title":"Modules"},{"location":"app/profile/forms/","text":"Forms Mercury Sample Manager Index / App / Profile / Forms Auto-generated documentation for app.profile.forms module. ChangeDetailsForm Show source in forms.py:18 Signature class ChangeDetailsForm ( FlaskForm ): ... ChangeDetailsForm().validate_email Show source in forms.py:36 Signature def validate_email ( self , field ): ... ChangeDetailsForm().validate_password Show source in forms.py:47 Signature def validate_password ( self , field ): ... ChangeDetailsForm().validate_username Show source in forms.py:40 Signature def validate_username ( self , field ): ... ChangePasswordForm Show source in forms.py:8 Signature class ChangePasswordForm ( FlaskForm ): ...","title":"Forms"},{"location":"app/profile/forms/#forms","text":"Mercury Sample Manager Index / App / Profile / Forms Auto-generated documentation for app.profile.forms module.","title":"Forms"},{"location":"app/profile/forms/#changedetailsform","text":"Show source in forms.py:18","title":"ChangeDetailsForm"},{"location":"app/profile/forms/#signature","text":"class ChangeDetailsForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/profile/forms/#changedetailsformvalidate_email","text":"Show source in forms.py:36","title":"ChangeDetailsForm().validate_email"},{"location":"app/profile/forms/#signature_1","text":"def validate_email ( self , field ): ...","title":"Signature"},{"location":"app/profile/forms/#changedetailsformvalidate_password","text":"Show source in forms.py:47","title":"ChangeDetailsForm().validate_password"},{"location":"app/profile/forms/#signature_2","text":"def validate_password ( self , field ): ...","title":"Signature"},{"location":"app/profile/forms/#changedetailsformvalidate_username","text":"Show source in forms.py:40","title":"ChangeDetailsForm().validate_username"},{"location":"app/profile/forms/#signature_3","text":"def validate_username ( self , field ): ...","title":"Signature"},{"location":"app/profile/forms/#changepasswordform","text":"Show source in forms.py:8","title":"ChangePasswordForm"},{"location":"app/profile/forms/#signature_4","text":"class ChangePasswordForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/profile/views/","text":"Views Mercury Sample Manager Index / App / Profile / Views Auto-generated documentation for app.profile.views module. changedetails Show source in views.py:9 Signature @profile . route ( \"/changedetails\" , methods = [ \"GET\" , \"POST\" ]) @login_required def changedetails (): ... changepassword Show source in views.py:26 Signature @profile . route ( \"/changepassword\" , methods = [ \"GET\" , \"POST\" ]) @login_required def changepassword (): ... leave Show source in views.py:41 Signature @profile . route ( \"/leave\" , methods = [ \"GET\" ]) @login_required def leave (): ...","title":"Views"},{"location":"app/profile/views/#views","text":"Mercury Sample Manager Index / App / Profile / Views Auto-generated documentation for app.profile.views module.","title":"Views"},{"location":"app/profile/views/#changedetails","text":"Show source in views.py:9","title":"changedetails"},{"location":"app/profile/views/#signature","text":"@profile . route ( \"/changedetails\" , methods = [ \"GET\" , \"POST\" ]) @login_required def changedetails (): ...","title":"Signature"},{"location":"app/profile/views/#changepassword","text":"Show source in views.py:26","title":"changepassword"},{"location":"app/profile/views/#signature_1","text":"@profile . route ( \"/changepassword\" , methods = [ \"GET\" , \"POST\" ]) @login_required def changepassword (): ...","title":"Signature"},{"location":"app/profile/views/#leave","text":"Show source in views.py:41","title":"leave"},{"location":"app/profile/views/#signature_2","text":"@profile . route ( \"/leave\" , methods = [ \"GET\" ]) @login_required def leave (): ...","title":"Signature"},{"location":"app/settings/","text":"Settings Mercury Sample Manager Index / App / Settings Auto-generated documentation for app.settings module. Modules Forms Views","title":"Settings"},{"location":"app/settings/#settings","text":"Mercury Sample Manager Index / App / Settings Auto-generated documentation for app.settings module.","title":"Settings"},{"location":"app/settings/#modules","text":"Forms Views","title":"Modules"},{"location":"app/settings/forms/","text":"Forms Mercury Sample Manager Index / App / Settings / Forms Auto-generated documentation for app.settings.forms module. EmailSettings Show source in forms.py:45 Signature class EmailSettings ( FlaskForm ): ... NewSMBResourceForm Show source in forms.py:7 Signature class NewSMBResourceForm ( FlaskForm ): ... NewUserForm Show source in forms.py:18 Signature class NewUserForm ( FlaskForm ): ...","title":"Forms"},{"location":"app/settings/forms/#forms","text":"Mercury Sample Manager Index / App / Settings / Forms Auto-generated documentation for app.settings.forms module.","title":"Forms"},{"location":"app/settings/forms/#emailsettings","text":"Show source in forms.py:45","title":"EmailSettings"},{"location":"app/settings/forms/#signature","text":"class EmailSettings ( FlaskForm ): ...","title":"Signature"},{"location":"app/settings/forms/#newsmbresourceform","text":"Show source in forms.py:7","title":"NewSMBResourceForm"},{"location":"app/settings/forms/#signature_1","text":"class NewSMBResourceForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/settings/forms/#newuserform","text":"Show source in forms.py:18","title":"NewUserForm"},{"location":"app/settings/forms/#signature_2","text":"class NewUserForm ( FlaskForm ): ...","title":"Signature"},{"location":"app/settings/views/","text":"Views Mercury Sample Manager Index / App / Settings / Views Auto-generated documentation for app.settings.views module. email Show source in views.py:82 Signature @settings . route ( \"/email\" , methods = [ \"GET\" , \"POST\" ]) @login_required @admin_required def email (): ... handle_img Show source in views.py:184 Signature def handle_img ( loc , src , refdlist ): ... handle_img_tags Show source in views.py:196 Signature def handle_img_tags ( text , itemid , refdlist ): ... log Show source in views.py:278 Signature @settings . route ( \"/log\" , methods = [ \"GET\" ]) @login_required @admin_required def log (): ... revision Show source in views.py:138 Signature @settings . route ( \"/revision\" , methods = [ \"GET\" ]) @login_required @admin_required def revision (): ... set_overview Show source in views.py:17 Signature @settings . route ( \"/overview\" ) @login_required @admin_required def set_overview (): ... smbresources Show source in views.py:24 Signature @settings . route ( \"/smbresources\" , methods = [ \"GET\" , \"POST\" ]) @login_required @admin_required def smbresources (): ... uploads Show source in views.py:213 Signature @settings . route ( \"/uploads\" , methods = [ \"GET\" ]) @login_required @admin_required def uploads (): ... users Show source in views.py:59 Signature @settings . route ( \"/users\" , methods = [ \"GET\" , \"POST\" ]) @login_required @admin_required def users (): ...","title":"Views"},{"location":"app/settings/views/#views","text":"Mercury Sample Manager Index / App / Settings / Views Auto-generated documentation for app.settings.views module.","title":"Views"},{"location":"app/settings/views/#email","text":"Show source in views.py:82","title":"email"},{"location":"app/settings/views/#signature","text":"@settings . route ( \"/email\" , methods = [ \"GET\" , \"POST\" ]) @login_required @admin_required def email (): ...","title":"Signature"},{"location":"app/settings/views/#handle_img","text":"Show source in views.py:184","title":"handle_img"},{"location":"app/settings/views/#signature_1","text":"def handle_img ( loc , src , refdlist ): ...","title":"Signature"},{"location":"app/settings/views/#handle_img_tags","text":"Show source in views.py:196","title":"handle_img_tags"},{"location":"app/settings/views/#signature_2","text":"def handle_img_tags ( text , itemid , refdlist ): ...","title":"Signature"},{"location":"app/settings/views/#log","text":"Show source in views.py:278","title":"log"},{"location":"app/settings/views/#signature_3","text":"@settings . route ( \"/log\" , methods = [ \"GET\" ]) @login_required @admin_required def log (): ...","title":"Signature"},{"location":"app/settings/views/#revision","text":"Show source in views.py:138","title":"revision"},{"location":"app/settings/views/#signature_4","text":"@settings . route ( \"/revision\" , methods = [ \"GET\" ]) @login_required @admin_required def revision (): ...","title":"Signature"},{"location":"app/settings/views/#set_overview","text":"Show source in views.py:17","title":"set_overview"},{"location":"app/settings/views/#signature_5","text":"@settings . route ( \"/overview\" ) @login_required @admin_required def set_overview (): ...","title":"Signature"},{"location":"app/settings/views/#smbresources","text":"Show source in views.py:24","title":"smbresources"},{"location":"app/settings/views/#signature_6","text":"@settings . route ( \"/smbresources\" , methods = [ \"GET\" , \"POST\" ]) @login_required @admin_required def smbresources (): ...","title":"Signature"},{"location":"app/settings/views/#uploads","text":"Show source in views.py:213","title":"uploads"},{"location":"app/settings/views/#signature_7","text":"@settings . route ( \"/uploads\" , methods = [ \"GET\" ]) @login_required @admin_required def uploads (): ...","title":"Signature"},{"location":"app/settings/views/#users","text":"Show source in views.py:59","title":"users"},{"location":"app/settings/views/#signature_8","text":"@settings . route ( \"/users\" , methods = [ \"GET\" , \"POST\" ]) @login_required @admin_required def users (): ...","title":"Signature"},{"location":"app/tests/","text":"Tests Mercury Sample Manager Index / App / Tests Auto-generated documentation for app.tests module. Modules Test Main","title":"Tests"},{"location":"app/tests/#tests","text":"Mercury Sample Manager Index / App / Tests Auto-generated documentation for app.tests module.","title":"Tests"},{"location":"app/tests/#modules","text":"Test Main","title":"Modules"},{"location":"app/tests/test_main/","text":"Test Main Mercury Sample Manager Index / App / Tests / Test Main Auto-generated documentation for app.tests.test_main module. test_db_migrations Show source in test_main.py:13 Test that the database migrations can be run. Signature def test_db_migrations (): ... test_instantiate_app Show source in test_main.py:7 Test that the app can be instantiated. Signature def test_instantiate_app (): ...","title":"Test Main"},{"location":"app/tests/test_main/#test-main","text":"Mercury Sample Manager Index / App / Tests / Test Main Auto-generated documentation for app.tests.test_main module.","title":"Test Main"},{"location":"app/tests/test_main/#test_db_migrations","text":"Show source in test_main.py:13 Test that the database migrations can be run.","title":"test_db_migrations"},{"location":"app/tests/test_main/#signature","text":"def test_db_migrations (): ...","title":"Signature"},{"location":"app/tests/test_main/#test_instantiate_app","text":"Show source in test_main.py:7 Test that the app can be instantiated.","title":"test_instantiate_app"},{"location":"app/tests/test_main/#signature_1","text":"def test_instantiate_app (): ...","title":"Signature"}]}